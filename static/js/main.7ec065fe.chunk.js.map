{"version":3,"sources":["App/App.styled.jsx","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","App/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Main","styled","main","Section","section","MainTitle","h1","addContact","createAction","name","number","payload","id","uuidv4","removeContact","filterContacts","Form","form","Label","label","Input","input","Button","button","ContactForm","useState","setName","setNumber","nameId","telId","dispatch","useDispatch","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","htmlFor","type","onChange","pattern","title","placeholder","required","List","ul","Item","li","ContactList","contacts","useSelector","state","items","filter","item","toLowerCase","includes","map","onClick","Filter","h2","Title","App","initContacts","JSON","parse","localStorage","getItem","defaultContacts","itemReducer","createReducer","action","existingName","find","contact","toast","info","checkContact","setItem","stringify","filterReducer","rootReducer","combineReducers","store","configureStore","reducer","devtools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ec065fe.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  width: 900px;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n `;\r\nexport const MainTitle = styled.h1`\r\n  width: 900px;\r\n  text-align: center;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  color: #04125e;\r\n`;","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/add\", ({name, number}) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    }\r\n}));\r\nexport const removeContact = createAction(\"contacts/remove\");\r\nexport const filterContacts = createAction(\"contacts/filter\");\r\n\r\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  font-size: 16px;\n  margin-top: 10px;\n  &:focus {\n    outline: none;\n    border: 1px solid #04125e;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #9ccdf5;\n  border: none;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nexport function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n    };\n    \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      dispatch(addContact({name, number}))\n      resetForm();\n   };\n\n   const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n   };\n  return (\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameId}> Name\n          <Input\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter contact name\"\n            required\n          />\n        </Label>\n\n        <Label htmlFor={telId}> Phone Number\n          <Input\n            id={telId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    );\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 800px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n  font-size: 24px;\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #9ccdf5;\n  border: none;\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { List, Item, Button } from \"./ContactList.styled\";\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\n\n\n\nexport function ContactList() {\n    const contacts = useSelector((state) =>\n               state.items.filter(item => item.name.toLowerCase().includes(state.filter.toLowerCase()))  \n    );\n    const dispatch = useDispatch();\n\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <Item key={id}>\n                    {name}: {number}\n                    <Button onClick={() => dispatch(removeContact(id))}>\n                        Delete\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    )\n}\n","import styled from \"@emotion/styled/macro\";\n\nexport const Input = styled.input`\n  border: 1px solid #000000;\n  border-radius: 4px;\n  font-size: 16px;\n  height: 40px;\n  margin-top: 10px;\n  &:focus {\n    outline: none;\n    border: 1px solid #04125e;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from \"./Filter.styled\";\nimport { filterContacts } from \"../../redux/contacts/contacts-actions\";\n\nexport function Filter() {\n    const value = useSelector((state) => state.filter);\n    const dispatch = useDispatch();\n    return (\n        <Label>Find contacts by name\n            <Input\n                type=\"text\"\n                value={value}\n                onChange={(e) => dispatch(filterContacts(e.currentTarget.value))}\n                placeholder=\"Enter contact name\"/>\n        </Label>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const MainTitle = styled.h2`\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #04125e;\n`;\n","import PropTypes from \"prop-types\";\nimport { MainTitle } from \"./Title.styled\";\n\nexport function Title({ title }) {\n    return (\n         <MainTitle>{title}</MainTitle>\n    )\n}\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n","import { ToastContainer } from 'react-toastify';\r\nimport { Main, Section, MainTitle } from './App.styled';\r\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\r\nimport { ContactList } from \"../components/ContactList/ContactList\";\r\nimport { Filter } from \"../components/Filter/Filter\";\r\nimport { Title } from \"../components/Title/Title\";\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <>\r\n      <MainTitle>Phonebook</MainTitle>\r\n      <Main>\r\n        <Section>\r\n          <Title title={\"Add contact\"} />\r\n          <ContactForm/>\r\n        </Section>\r\n        <Section>\r\n          <Title title=\"Search contact\" />\r\n          <Filter />\r\n        </Section>\r\n        <Section>\r\n          <Title title=\"Contacts\"/>\r\n          <ContactList />\r\n        </Section>\r\n      </Main>\r\n      <ToastContainer />\r\n      </>\r\n  )\r\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport defaultContacts from '../../data/contacts.json'\r\nimport { addContact, removeContact, filterContacts } from \"./contacts-actions\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst initContacts = JSON.parse(localStorage.getItem(\"contacts\")) ?? defaultContacts;\r\nconst initFilter = '';\r\n\r\nconst checkContact = (contacts, name) => {\r\n    const existingName = contacts.find(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    if (existingName) {\r\n        toast.info('Contact with such name already exists');\r\n        return existingName;\r\n    }\r\n};\r\n\r\nconst addItem = (state, action) => {\r\n  const existingСontact = checkContact(state, action.payload.name);\r\n    if (existingСontact) {\r\n        return state;\r\n    }\r\n    localStorage.setItem(\"contacts\", JSON.stringify([action.payload, ...state]));\r\n    return [action.payload, ...state];\r\n};\r\n\r\nconst removeItem = (state, action) => {\r\n    const contacts = state.filter(item => item.id !== action.payload);\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    return contacts\r\n};\r\n\r\nconst filterItem = (state, action) => {\r\n    return action.payload;\r\n};\r\n\r\nconst itemReducer = createReducer(initContacts, {\r\n  [addContact]: addItem,\r\n  [removeContact]: removeItem,\r\n});\r\n\r\nconst filterReducer = createReducer(initFilter, {\r\n  [filterContacts]: filterItem,\r\n});\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    items: itemReducer,\r\n    filter: filterReducer,\r\n    }\r\n);\r\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./contacts/contacts-reducer\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devtools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}